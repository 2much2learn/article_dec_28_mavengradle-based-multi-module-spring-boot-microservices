name: Delivery Pipeline

on:
  push:
    branches:
      - feature-ms-carlosLopez-pipelinedelivery

jobs:

  run-unit-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: running-tests
        uses: actions/checkout@v3.5.3
    
      - name: Run Tests
        run: |
          chmod +x gradlew
          ./gradlew test

  # scan-vulnerabilities:
  #   name: Vulnerabilities scanner
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       id: running-tests
  #       uses: actions/checkout@v3.5.3

      # - name: Run SonarCloud tests
      #   id: running-sonarcloud-test
      #   run: |
      #       chmod +x gradlew
      #       ./gradlew build sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      # - name: Run SonarCloud tests
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: ./gradlew build sonar --info
      
  # build-java-project:
  #   name: Build java project
  #   runs-on: self-hosted
  #   needs: [run-unit-tests]
  #   steps:
  #     - name: CheckoutðŸš€
  #       uses: actions/checkout@v3.5.3

  #     - name: Setup JAVA JDK
  #       uses: actions/setup-java@v3.12.0
  #       with:
  #         java-version: '11'
  #         distribution: 'zulu'

  #     - name: Compile Gradle
  #       id: compile-gradle
  #       run: |
  #         chmod +x gradlew
  #         ./gradlew build
      
  #     - name: Upload JARs
  #       uses: actions/upload-artifact@v3.1.2
  #       with:
  #         name: build
  #         path: |
  #           service-a/build/libs/service-a-0.0.1-SNAPSHOT.jar
  #           service-b/build/libs/service-b-0.0.1-SNAPSHOT.jar
  #           service-c/build/libs/service-c-0.0.1-SNAPSHOT.jar
  #         retention-days: 1

  deploy-on-k8s:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: [run-unit-tests]
    steps:
      
      - name: CheckoutðŸš€
        uses: actions/checkout@v3.5.3

      # now you can run kubectl to see the pods in the cluster
      - name: Install Minikube
        run : |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          minikube start
          kubectl get po -A
          alias kubectl="minikube kubectl --"
      - name: deploy apps
        run: |
          ls -lhart
          kubectl apply -f k8s
          curl http://localhost:8081/greeting