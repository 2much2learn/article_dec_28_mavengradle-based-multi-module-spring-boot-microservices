name: Delivery Pipeline

on:
  push:
    branches:
      - feature-ms-carlosLopez-pipelinedelivery

jobs:

  run-unit-tests:
    name: Run Tests
    runs-on: self-hosted
    steps:
      - name: Checkout
        id: running-tests
        uses: actions/checkout@v3.5.3
    
      - name: Run Tests
        run: |
          chmod +x gradlew
          ./gradlew test

  # scan-vulnerabilities:
  #   name: Vulnerabilities scanner
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       id: running-tests
  #       uses: actions/checkout@v3.5.3

      # - name: Run SonarCloud tests
      #   id: running-sonarcloud-test
      #   run: |
      #       chmod +x gradlew
      #       ./gradlew build sonar -Dsonar.token=${{ secrets.SONAR_TOKEN }}
      # - name: Run SonarCloud tests
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: ./gradlew build sonar --info
      
  build-java-project:
    name: Build java project
    runs-on: self-hosted
    needs: [run-unit-tests]
    steps:
      - name: CheckoutðŸš€
        uses: actions/checkout@v3.5.3

      - name: Setup JAVA JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Compile Gradle
        id: compile-gradle
        run: |
          chmod +x gradlew
          ./gradlew build
      
      - name: Upload JARs
        uses: actions/upload-artifact@v3.1.2
        with:
          name: build
          path: |
            service-a/build/libs/service-a-0.0.1-SNAPSHOT.jar
            service-b/build/libs/service-b-0.0.1-SNAPSHOT.jar
            service-c/build/libs/service-c-0.0.1-SNAPSHOT.jar
          retention-days: 1

  docker-build:
    name: Build docker image
    outputs:
      full_docker_image_tag: '${{ steps.build_image.outputs.full_docker_image_tag }}'
      image_tag: '${{ steps.build_image.outputs.image_tag }}'
    runs-on: self-hosted
    needs: [run-unit-tests,build-java-project]
    steps:
      
      - name: CheckoutðŸš€
        uses: actions/checkout@v3.5.3
    
      - name: Add SHORT_SHA and BRANCH_TAG env variables
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "BRANCH_TAG=`echo ${GITHUB_REF##*/}`" >> $GITHUB_ENV

      - name: Set IMAGE_TAG env variable
        run: |
          echo "IMAGE_TAG=`echo ${BRANCH_TAG}-${SHORT_SHA}`" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
            name: build
      
      - name: Docker login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag image
        id: build_image
        env:
          REGISTRY: 'hub.docker.com'
          IMAGE_NAME: 'delivery-pipeline-devops-foundation'
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t krlosaren/$IMAGE_NAME:$IMAGE_TAG -f Dockerfile .
          docker images 
          docker push krlosaren/$IMAGE_NAME:$IMAGE_TAG 

