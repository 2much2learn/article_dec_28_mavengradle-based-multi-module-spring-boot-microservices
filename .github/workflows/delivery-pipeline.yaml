name: Delivery Pipeline

on:
  push:
    branches:
      - feature-ms-carlosLopez-pipelinedelivery

jobs:
  build-java-project:
    name: Build java project
    runs-on: ubuntu-latest
    steps:
      - name: CheckoutðŸš€
        uses: actions/checkout@v3.5.3

      - name: Setup JAVA JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Compile Gradle
        run: |
          chmod +x gradlew
          ./gradlew build
  
  docker-build:
    name: Build docker image
    outputs:
      full_docker_image_tag: '${{ steps.build_image.outputs.full_docker_image_tag }}'
      image_tag: '${{ steps.build_image.outputs.image_tag }}'
    runs-on: ubuntu-latest
    needs:
      - build-java-project
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
    
      - name: Add SHORT_SHA and BRANCH_TAG env variables
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "BRANCH_TAG=`echo ${GITHUB_REF##*/}`" >> $GITHUB_ENV

      - name: Set IMAGE_TAG env variable
        run: |
          echo "IMAGE_TAG=`echo ${BRANCH_TAG}-${SHORT_SHA}`" >> $GITHUB_ENV

      - name: Build and tag image
        id: build_image
        env:
          REGISTRY: 'hub.docker.com'
          IMAGE_NAME: 'delivery-pipeline-devops-foundation'
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t $IMAGE_NAME:${{ env.IMAGE_TAG }} .
          mkdir -p /tmp
          docker save "$REGISTRY/$IMAGE_NAME:${{ env.IMAGE_TAG }}" > /tmp/docker-image.tar
          echo "full_docker_image_tag=$REGISTRY/$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      # - name: Upload artifact
      #   env:
      #     FULL_IMAGE_TAG: ${{ env.full_docker_image_tag }}
      #   run: |
      #     docker push $FULL_IMAGE_NAME